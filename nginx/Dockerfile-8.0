FROM ghcr.io/deck-app/nginx:v8.0
LABEL maintainer Naba Das <hello@get-deck.com>

ENV JOOMLA_INSTALLATION_DISABLE_LOCALHOST_CHECK=1
# Persistent runtime dependencies
# Example RUN apk add --no-cache php8-openssl php8-sysvmsg php8-curl php8-mcrypt
RUN apk add --no-cache rsync bzip2-dev gmp-dev icu-dev libjpeg-turbo-dev libmemcached-dev libpng-dev libzip-dev openldap-dev pcre-dev postgresql-dev php8-gd php8-ldap php8-gmp php8-intl php8-pdo_mysql php8-pdo_pgsql php8-pgsql

RUN mkdir -p /app
RUN mkdir -p /var/preview
COPY default.conf /etc/nginx/conf.d/default.conf
COPY default.conf /app/default.conf
RUN wget -O /var/preview/index.html https://raw.githubusercontent.com/deck-app/stack-preview-screen/main/install/index.html
RUN sed -i "s#{SERVER_ROOT}#/var/preview#g" /etc/nginx/conf.d/default.conf
RUN sed -i "s#{SERVER_ROOT}#/var/www/#g" /app/default.conf
RUN apk add --no-cache zip tar

# pecl will claim success even if one install fails, so we need to perform each install separately
RUN pecl install APCu-5.1.21
#RUN pecl install mcrypt-1.0.4
RUN pecl install memcached-3.1.5
RUN pecl install redis-5.3.4

WORKDIR /var/www
#PHP display error enable or disable
COPY php_ini/php.ini /etc/php8/php.ini
ARG DISPLAY_PHPERROR
RUN if [ ${DISPLAY_PHPERROR} = true ]; then \
sed -i "s#{DISPLAY}#On#g" /etc/php8/php.ini \
;else \
sed -i "s#{DISPLAY}#Off#g" /etc/php8/php.ini \
;fi

#Xdebug enable or disable
ARG XDEBUG
RUN if [ ${XDEBUG} = true ]; then \
apk add php8-pecl-xdebug \
&& echo "zend_extension=xdebug" >> /etc/php8/php.ini \
;fi

COPY docker-entrypoint.sh /docker-entrypoint.sh

# Download package and extract to web volume
ARG JOOMLA_VERSION

RUN set -ex; \
	curl -o joomla.tar.bz2 -SL https://github.com/joomla/joomla-cms/releases/download/${JOOMLA_VERSION}/Joomla_${JOOMLA_VERSION}-Stable-Full_Package.tar.bz2; \
	mkdir -p /usr/src/joomla; \
	tar -xf joomla.tar.bz2 -C /usr/src/joomla; \
	rm joomla.tar.bz2; \
	chown -R nginx:nginx /usr/src/joomla

RUN sed -i 's/^if \[\[ "$1" == apache.*$/if \[ true \]; then/' /docker-entrypoint.sh
ARG JOOMLA_DB_HOST
ARG JOOMLA_DB_USER
ARG JOOMLA_DB_NAME
ARG JOOMLA_DB_PASSWORD
ENV MYSQL_PORT_3306_TCP=3306
ENV JOOMLA_DB_HOST=mariadb
RUN sed -i "s#{JOOMLA_DB_HOST}#${JOOMLA_DB_HOST}#g" /docker-entrypoint.sh
RUN sed -i "s#{JOOMLA_DB_USER}#${JOOMLA_DB_USER}#g" /docker-entrypoint.sh
RUN sed -i "s#{JOOMLA_DB_NAME}#${JOOMLA_DB_NAME}#g" /docker-entrypoint.sh
RUN sed -i "s#{JOOMLA_DB_PASSWORD}#${JOOMLA_DB_PASSWORD}#g" /docker-entrypoint.sh
RUN sed -i "s#{MYSQL_PORT_3306_TCP}#${MYSQL_PORT_3306_TCP}#g" /docker-entrypoint.sh
RUN sed -i "s#{JOOMLA_DB_HOST}#${JOOMLA_DB_HOST}#g" /docker-entrypoint.sh

COPY makedb.php /makedb.php
RUN chmod +x /docker-entrypoint.sh
RUN chmod +x /makedb.php
CMD /docker-entrypoint.sh & /sbin/runit-wrapper